# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: MSBuild

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2
      with:
        msbuild-architecture: x64

    - name: .NET Restore
      # You may pin to the exact commit or the version.
      # uses: codebeltnet/dotnet-restore@1cf30dd0fdddac25bc7dcb559c6d0c310fb0d472
      uses: codebeltnet/dotnet-restore@v2.1.2
      with:
        # Optional path to the project(s) file to restore. Pass empty to restore all dependencies and tools of a solution. Supports globbing.
        projects: 'UnitTests/UnitTests.vcxproj' # default is **/*.csproj
        # Sets the verbosity level of the command. Allowed values are q[uiet], m[inimal], n[ormal], d[etailed], and diag[nostic]. The default is quiet.
        level: 'minimal' # default is quiet
        # Whether to use the restore cache or not. Default is not to use the restore cache.
        useRestoreCache: 'false' # optional, default is false
        # Allows for a custom provided key that will be used instead of the default implementation.
        restoreCacheKey: '' # optional, default is

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE}}
